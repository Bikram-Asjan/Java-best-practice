package com.bik;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

public class SecondHighestCharacter {

	public static void main(String[] args) {
		String string = "asdgjdssssseee";
		/*List<Character> occurences = new ArrayList<>();
		int maxOccur = 0;
		HashMap<Character, Integer> map = new HashMap();
        char[]  charArray = string.toCharArray();
        for(char c : charArray){
            if(map.containsKey(c)){
                map.put(c, (map.get(c)+1));
            }else{
                map.put(c,1);
            }
            if(map.get(c)>maxOccur){
            	maxOccur = map.get(c);
            }
            
        }
        for(Entry<Character, Integer> entry : map.entrySet()){
         if(entry.getValue() == maxOccur){
        	 occurences.add(entry.getKey());
         }
        }
      */
		int count[NO_OF_CHARS] = {0}, i;
	    for (i=0; str[i]; i++)
	        (count[str[i]])++;
	 
	    // Traverse through the count[] and find second highest element.
	    int first = 0, second = 0;
	    for (i = 0; i < NO_OF_CHARS; i++)
	    {
	        /* If current element is smaller than first then update both
	          first and second */
	        if (count[i] > count[first])
	        {
	            second = first;
	            first = i;
	        }
	 
	        /* If count[i] is in between first and second then update second  */
	        else if (count[i] > count[second] &&
	                 count[i] != count[first])
	            second = i;
	    }
	 
	    return second;
	                      

	}

}
